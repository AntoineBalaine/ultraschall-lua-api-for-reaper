Ultraschall Framework - Changelog

>> 4.00 Beta 2.7: - "Layla - Derek and the Dominos" - 30th of April 2018
New features in 4.00beta2.7
	- SetEnvelopeHeight - set the height and compactible state of an envelope-lane/envelopestatechunk
	- GetTrackStateChunk - get a TrackStateChunk without the hassle of creating a trackobject first
	- SetTrackStateChunk - set a TrackStateChunk without the hassle of creating a trackobject first
	- GetTrackWidth - gets the Track-Width
	- GetTrackVolPan - gets Vol and Pan-settings of the track
	- GetTrackScore - gets Score of the track
	- GetTrackPanMode - gets PanMode of the track
	- GetTrackMidiColorMapFn - gets MidiColorMapFilename of the track
	- GetTrackMidiBankProgFn - gets MidiBankProg-Filename of the track
	- GetTrackMidiTextStrFn - gets MidiTextStr-Filename of the track
	- GetTrackID - gets the track-ID
	- CountPatternInString - counts a pattern in a sourcestring and returns appearances and positions of appearances
    - ConvertColor - converts color to native, without the hassle that Reaper needs
    - CountNormalMarkers_NumGap - returns the first numbering-gap within shown-markernumbers
    - CenterViewToCursor - centers arrange view to play-, edit- or mousecursor-timeposition.
    - SetReaperWindowToSize - to set the size of Reaper's Main Window
    - toboolean - converts a string to boolean, if possible. Like Lua's tostring() or tonumber()-functions
    - CheckActionCommandIDFormat - checks, if an action-command-id is properly formatted
    - IsRegionAtPosition - checks, if regions are at a certain position and returns their index-numbers
    - IsMarkerAtPosition - checks, if markers are at a certain position and returns their index-numbers
    - SetTrackID - sets the track-ID
    - SetTrackMidiColorMapFn - sets MidiColorMapFilename of the track
    - SetTrackMidiBankProgFn - sets MidiBankProg-Filename of the track
	- SetTrackMidiTextStrFn - sets MidiTextStr-Filename of the track
    - SetTrackPanMode - sets PanMode of the track
    - SetTrackWidth - sets the Track-Width
    - InsertMediaItemFromFile - inserts a mediafile into the project at position and in specific track
    - GetMediafileAttributes - returns mediafile-attributes
    - GetMarkerByName - gets markers/regions by name
    - GetMarkerByName_Pattern - gets markers/regions that have a certain character-sequence in their name
    - GetMarkerByIndex - gets values of a certain marker/region, count by either markers or regions
    - SetMarkerByIndex - sets values of a certain marker/region, count by either markers or regions
    - GetReaperAppVersion - returns the appversion and the bits-version of the Reaper-App, separated into version and bits(unlike reaper.GetAppVersion())
    - GetOS - returns the operating system and it's bits separated, unlike reaper.GetOS()
    - IsOS_Windows - returns true, if the operating-system is Windows, false if not. Also returns the bits of the os.
    - IsOS_Mac - returns true, if the operating-system is MacOS, false if not. Also returns the bits of the os.
    - IsOS_Other - returns true, if the operating-system is other(usually Linux), false if not. Also returns the bits of the os.
    - GetItemSpectralConfig - gets the FFT-size of the spectral-edit-view of a specific item/statechunk
    - SetItemSpectralConfig - sets the FFT-size of the spectral-edit-view of a specific item/statechunk
    - GetItemSpectralEdit - Get the settings of a given spectral-edit-boundary-box
    - CountItemSpectralEdits - Counts the number of spectral-edit-boundary-boxes
    - DeleteItemSpectralEdit - deletes a spectral-edit-boundary-box
    - SetTrackScore - sets SCORE-state of a track
    - SetTrackVolPan - set vol, pan, panlaw of a track
    - SetTrackRecCFG - set track-rec-encoding-configuration
    - LimitFractionOfFloat - takes a float-value and reduces the number of digits in the fraction-part of the float; (500th Api function!)
    - SearchStringInString - searches for occurrences of a string within another string; differs from CountPatternInString in that it allows
                             disabling searching for strings within already found strings
    - GetAllEntriesFromTable - returns all entries from a table in an iterable form; good for unknown tables/tablestructures
    - GetItemSourceFile_Take - returns filename, pcm-source and the media-item-take-object of a requested take
    - GetAllDirectoriesInPath - gets all directory-names in path
    - GetAllFilesnamesInPath - gets all filenames in path
    - CountDirectoriesAndFilesInPath - counts files and directories in path
    - APIExists - returns, if a certain function/element exists in the ultraschall-api
    - AddItemSpectralEdit - adds an spectral-editing-box into an item/statechunk
    - GetItemSpectralVisibilityState - get the visibility-state of spectral-edit of a certain MediaItem
    - IsValidEnvStateChunk - checks, if a string is a valid envelope-state-chunk
    - IsValidTrackStateChunk - checks, if a sring is a valid trackstate-chunk
    - IsValidItemStateChunk - checks, if a string is a valid itemstate-chunk
    - EnumProjects - gets the projectfilename+path and the ReaProject-object of a requested project
			TODO!!	- SetTrackGroupFlagsState - sets GroupFlagsState
            TODO!!  - CreateItemFromTake, which creates a new item from an existing take. Like cropping, but leaves the original untouched.
            TODO!!  - MoveTakeInTakeOrderInMediaitem, which allows changing the order of takes within an item
            TODO!!  - Get/SetProject-functions also accept ProjectStateChunk for getting and setting
            TODO!!  - Get/SetProjectBay-functions
            TODO!!  - SetItemSpectogram - shows the spectrogram, in which you can do spectral-editing
            TODO!!  - SetItemSpectralEdit - Set the settings of a given spectral-edit-boundary-box
            TODO!!  - GetAllTakesFromMediaItem - returns an array with all takes from an item, objects as well as info_values
            TODO!!  - Renderfunctions should use reaper.EnumProjects to get the path+projectfilename.rpp, instead of assuming it's one dir above the rec-dir
            TODO!!  - copy array-function von Udo bugtesten und integrieren
                        function copy(obj, seen) --copy an array
                              if type(obj) ~= 'table' then return obj end
                              if seen and seen[obj] then return seen[obj] end
                              local s = seen or {}
                              local res = setmetatable({}, getmetatable(obj))
                              s[obj] = res
                              for k, v in pairs(obj) do res[copy(k, s)] = copy(v, s) end
                              return res
                        end
			
Changes from 4.00beta2.6 to 4.00beta2.7
    - Tons of bugfixes. I mean, tons as in metric tons ;)
	- GetTrackRecCFG - added documentation, that was still missing -> fixed now; added missing return-value
	- GetLastErrorMessage2 - had wrong functionname, corrected documentation
	- cleaned up code and improved readability
	- GetPartialString - returns nil in case of error now
	- WriteValueToFile - minor additions to documentation
	- CreateTrackNumbersString - minor additions to documentation
	- SetTrackMuteSoloState - corrected documentation's-description
	- initialization of the framework on Mac could potentially not work due wrong separator -> fixed now
	- improved installation and usage-procedure of the framework heavily
	- GetTrackAutoRecArmState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackAutomodeState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackBeatState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackBusCompState - supports now trackstatechunks as well; sped up code
	- GetTrackBypFXState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackFreeModeState - supports now trackstatechunks as well; sped up code
	- GetTrackGroupFlagsState - supports now mastertrack and trackstatechunks as; sped up codewell
	- GetTrackHeightState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackINQState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackIPhaseState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackIcon_Filename - supports now mastertrack and trackstatechunks as well
	- GetTrackIsBusState - supports now trackstatechunks as well; sped up code
	- GetTrackLayoutNames - supports now mastertrack and trackstatechunks as well
	- GetTrackLockState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackMIDIOutState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackMainSendState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackMidiCTL - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackMidiInputChanMap - supports now mastertrack and trackstatechunks as well
	- GetTrackMuteSoloState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackNChansState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackName - supports now mastertrack and trackstatechunks as well
	- GetTrackPeakColorState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackPerfState - supports now trackstatechunks as well; sped up code
	- GetTrackRecCFG - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackRecState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackShowInMixState - supports now mastertrack and trackstatechunks as well; sped up code
	- GetTrackVUState - supports now mastertrack and trackstatechunks as well, fixed bug; sped up code
	- SetTrackAutoRecArmState - supports now mastertrack and trackstatechunks as well
	- SetTrackAutomodeState - supports now mastertrack and trackstatechunks as well
	- SetTrackBeatState - supports now mastertrack and trackstatechunks as well
	- SetTrackBusCompState - supports now trackstatechunks as well
	- SetTrackBypFXState - supports now mastertrack and trackstatechunks as well
	- SetTrackFreeModeState - supports now mastertrack and trackstatechunks as well
	- SetTrackHeightState - supports now mastertrack and trackstatechunks as well
	- SetTrackINQState - supports now mastertrack and trackstatechunks as well
	- SetTrackIPhaseState - supports now mastertrack and trackstatechunks as well
	- SetTrackIcon_Filename - supports now trackstatechunks as well
	- SetTrackIsBusState - supports now trackstatechunks as well
	- SetTrackLayoutNames - supports now trackstatechunks as well; minor improvements
	- SetTrackLockState - supports now trackstatechunks as well; improved speed
	- SetTrackMIDIOutState - supports now mastertrack and trackstatechunks as well
	- SetTrackMainSendState - supports now mastertrack and trackstatechunks as well
	- SetTrackMidiCTL - supports now mastertrack and trackstatechunks as well
	- SetTrackMidiInputChanMap - supports now mastertrack and trackstatechunks as well
	- SetTrackMuteSoloState - supports now mastertrack and trackstatechunks as well	
	- SetTrackNChansState - supports now mastertrack and trackstatechunks as well
	- SetTrackName - supports now mastertrack and trackstatechunks as well
	- SetTrackPeakColorState - supports now mastertrack and trackstatechunks as well
	- SetTrackPerfState - supports now trackstatechunks as well
	- SetTrackRecState - supports now mastertrack and trackstatechunks as well
	- SetTrackShowInMixState - supports now mastertrack and trackstatechunks as well
	- SetTrackVUState - supports now mastertrack and trackstatechunks as well
	- ToggleScrollingDuringPlayback - also affects scrolling during recording now; sometimes, continuous scroll wouldn't restart -> fixed now
	- GetNextClosestItemEdge - had trouble finding the end of the last item in a track -> fixed now
	- GetPreviousClosestItemEdge - had trouble finding the beginning of the first item in track as well as 
				the item before the current item at times -> fixed now
	- GetClosestPreviousMarker - always used cursorposition as calculation base, never mouseposition; it also couldn't find the previous
				marker before the current one -> fixed now
	- GetClosestNextMarker - always used cursorposition as calculation base, never mouseposition -> fixed now
	- GetClosestNextRegionEdge - renamed from GetClosestNextRegion; always used cursorposition as calculation base, never mouseposition -> fixed now
	- GetClosestPreviousRegionEdge - renamed from GetClosestPreviousRegion; always used cursorposition as calculation base, never mouseposition -> fixed now
	- GetApiVersion - returns now an additional return-value of type "number", that you can use for version-comparison like "if required_version>version then"
	- SplitStringAtLineFeedToArray - was missing the returned count-variable in the documentation -> fixed now
    - ToggleScrollingDuringPlayback - changed parameter move_editcursor to boolean; added goto_playcursor which moves view to playcursor; 
                                      fixed bug that messed up scrolling during recording.
    - Ultraschall-Api is now located in UserPlugins in the resources-folder(where every third-party-plugin belongs to ;) )
    - IsItemInTrack - tracknumber is now 1 based, means: 1 for track 1, 2 for track 2, etc
    - ApiTest displays only one message now (damn was it annoying before... ;) )
    - CSV2IndividualLinesAsArray supports different separators as well
    - ReadFullFile - fixed small bug and returns now the number of lines of files, if binary is set to false
    - GetProject_DefPitchMode - added Rubber Band Pitchmodes and updated elastique to 3.2.3 with missing settings
    - SetProject_DefPitchMode - added Rubber Band Pitchmodes and updated elastique to 3.2.3 with missing settings
    - AddErrorMessage - new parameters, parametername and errorcode, so you can specify these better
    - ReadErrorMessage - includes the new parameters parametername and errorcode, sped up code; used to reset creation date instead of readstate -> fixed
    - GetLastErrorMessage - includes the new parameters parametername and errorcode, readstatus is now a string with "unread" or the 
                            last readtime(no boolean anymore); sped up code; used to reset creation date instead of readstate -> fixed
    - DeleteLastErrorMessage - deletes now the last errormessage, only changed the errorcounter before
    - GetLastErrorMessage2 - includes the new parameters parametername and errorcode; used to reset creation date instead of readstate -> fixed
    - ShowLastErrorMessage - reworked the messagebox to include functionname, parametername, errormessage and errorcode
    - GetPath - returns nil now, if the separator can't be found, and throws an error-message as well in that case
    - GetPartialString - returns nil now, if the separator can't be found, and throws an error-message as well in that case; sped up code
    - RunCommand - throws an error-message, if an invalid action-command-id is given
    - CSV2Line - rewritten and sped up
    - RGB2Num - removed
    - CSV2IndividualLinesAsArray - rewrote and sped up code; supports now separators longer than one character
    - IsItemInTrack - minor improvements
    - Docs: removed SWS-logo from all functions, that don't require SWS
    - SetChapterMarker - removed
    - ImportChaptersFromFile - removed
    - ExportChapterMarkersToFile - removed
    - EnumerateChapterMarkers - removed
    - EnumerateDummyMarkers - removed
    - EnumerateEditRegion - removed
    - GetAllChapterMarkers - removed
    - DeleteChapterMarker - removed
    - DeleteDummyMarker - removed
    - CountChapterMarkers - removed
    - CountDummyMarkers - removed
    - ChapterToDummyMarker - removed
    - ChapterToEditMarker - removed
    - ChapterToMarker - removed
    - DummyToChapterMarker - removed
    - DummyToEditMarker - removed
    - DummyToMarker - removed
    - EditToChapterMarker - removed
    - EditToDummyMarker - removed
    - MarkerToChapterMarker - removed
    - MarkerToDummyMarker - removed
    - IsMarkerChapter - removed 
    - IsMarkerDummy - removed
    - AddChapterMarker - removed
    - AddDummyMarker - removed
    - CountUSExternalState_sec - did not check for existence of ultraschall.ini -> fixed
    - CountUSExternalState_key - did not check for existence of ultraschall.ini -> fixed
    - EnumerateUSExternalState_sec - returned empty strings, when the ultraschall.ini contained them -> fixed
    - EnumerateUSExternalState_key - number was expected to be string and produced problems -> fixed
    - SetPlayCursor_WhenPlaying - added parameter-validity-check for parameter position
    - SetPlayAndEditCursor_WhenPlaying - added parameter-validity-check for parameter position
    - JumpForwardBy - added parameter seekplay for choosing, if playcursor shall move too; moves mainly editcursor now; pause caused problems -> fixed
    - JumpBackwardBy - added parameter seekplay for choosing, if playcursor shall move too; moves mainly editcursor now; pause caused problems -> fixed
    - GetNextClosestItemEdge - was looking in the wrong track, which caused problems with items in a single track -> fixed
    - GetPreviousClosestItemEdge - was looking in the wrong track, which caused problems with items in a single track -> fixed
    - GetClosestNextRegionEdge - returns now "beg" oder "end" to indicate, which side of the region has been found
    - GetClosestPreviousRegionEdge - returns now "beg" oder "end" to indicate, which side of the region has been found
    - ToggleMute_TrackObject - sped up code
    - GetItemPlayRate_StateChunk - docs, added information about some of the parameters, like pitch-settings
    - ToggleStateButton - added section-info to the docs
    - RefreshToolbar_Action - added section-info to the docs
    - ToggleStateAction - added section-info to the docs
    - CountNormalMarkers - added support for planned chapter-markers(color_value 100, 255, 0); 
                           was counting wrong, when regions were available -> fixed
    - accidentally used os as return-variable in many functions, leading to overwriting of Lua's own os.functions() like os.date(), etc -> fixed
    - CountPatternInString - internal changes to prevent accidental overwriting of Lua's own string.functions()
    - SplitStringAtLineFeedToArray - the entries in the array still contained the useless line-feed -> fixed
    - integer parameters accept only integers from now on (used to be numbers)
    - CSV2IndividualLinesAsArray - the returned count-value was one too high -> fixed
    - CountNormalMarkers - added support for planned chapter marker
    - EnumerateNormalMarkers - support for planned chapter marker added; added missing info in the docs
    - EnumerateEditMarkers - expected "_Edit:" as name of edit-marker, instead of "_Edit" -> fixed
    - SetNormalMarker - added support for planned chapter marker; expected "_Edit:" as name of edit-marker, instead of "_Edit" -> fixed
    - SetEditMarker - expected "_Edit:" as name of edit-marker, instead of "_Edit" -> fixed
    - DeleteNormalMarker - added support for planned chapter marker; deleted in some situations non-normal-markers -> fixed
    - DeleteEditMarker - expected "_Edit:" as name of edit-marker, instead of "_Edit" -> fixed
    - IsMarkerEdit - expected "_Edit:" as name of edit-marker, instead of "_Edit" -> fixed
    - IsMarkerNormal - added support for planned chapter marker; expected "_Edit:" as name of edit-marker, instead of "_Edit" -> fixed
    - IsRegionEditRegion - expected "_Edit:" as name of edit-region, instead of "_Edit" -> fixed
    - SetEditRegion - expected "_Edit:" as name of edit-region, instead of "_Edit" -> fixed
    - DeleteEditRegion - expected "_Edit:" as name of edit-region, instead of "_Edit" -> fixed
    - EnumerateEditRegion - expected "_Edit:" as name of edit-region, instead of "_Edit" -> fixed
    - GetAllNormalMarkers - added index-number and shown-number to the array; completed docs
    - GetAllMarkers - added index-number, shown-number and color to the array; completed docs
    - GetAllEditMarkers - added index-number to the array; completed docs
    - DeletePodRangeRegion - return value is now boolean
    - DeleteNormalMarker - completed docs
    - ExportNormalMarkersToFile - completed docs
    - CountNormalMarkers_NumGap - completed docs
    - MarkerToEditMarker - completed docs
    - CountEditMarkers - used to count edit-regions as well -> fixed now
    - ExportEditMarkersToFile - crashed due bug with edit-regions -> fixed now
    - WriteValueToFile_ReplaceBinary - naming conflict, 2 functions had the name WriteValueToFile_Replace; renamed one to WriteValueToFile_ReplaceBinary
    - EditToMarker - small internal changes to give the marker it's correct color: Reaper's default color for marker
    - CreateTrackNumbersString_SelectedTracks - additions to the docs
    - ReadValueFromFile - returnd now all found lines as array
    - 
    
>> 4.00 Beta 2.6: - "Is that all there is? - Peggy Lee" - 19th of October 2017
New features in 4.00beta2.6 - has now 450 functions, with about 30 new ones:
	- CreateAllTracksTrackString - creates a trackstring with all tracks in the current project
	- new datastructure "EnvelopePointObjects" and "EnvelopePointArrays"(for EnvelopePointObjects) for easier massworking with envelopepoints
	- CreateEnvelopePointObject - creates an EnvelopePointObject
	- GetEnvelopePoint - gets envelopepoint easier than Reaper's own functions. Returns value converted to db-value as well
	- GetClosestEnvelopePointIDX_ByTime - gets envelope-point-idx closest to a given timeposition
	- GetEnvelopePointIDX_Between - gets envelope-points between start and endtime
	- AddEnvelopePoints_EnvelopePointObject - adds an EnvelopePointObject
	- AddEnvelopePoints_EnvelopePointArray - adds an array of EnvelopePointObjects
	- CheckEnvelopePointObject - checks, if an EnvelopePointObject is a valid one
	- DeleteEnvelopePoints_EnvelopePointObject - deletes an envelope-point, according to the EnvelopePointObject 
	- DeleteEnvelopePoints_EnvelopePointArray -	deletes envelope-points, according to EnvelopePointObjects in EnvelopePointArray
	- SetEnvelopePoints_EnvelopePointObject - sets an envelope-point, according to the EnvelopePointObject 
	- SetEnvelopePoints_EnvelopePointArray - sets envelope-points, according to EnvelopePointObjects in EnvelopePointArray
	- CountEnvelopePoints - counts envelope-point in a given track and envelope-name
	- ToggleIDE_Errormessages - toggles, if API shows the errormessages in Reaper's IDE or not
	- WriteValueToFile_Insert - inserts a string into a specific line-position of a file
	- WriteValueToFile_Replace - replaces specific lines in a file with value
	- GetLengthOfFile - returns length of a file
	- ReadBinaryFile_Offset - reads a binary file. Allows partial reading of a file as well.
	- WriteValueToFile_InsertBinary - inserts a value into a binary file at specified position
	- WriteValueToFile_Replace - replaces a specified portion of a file with a value
	- GetStringFromClipboard_SWS - returns the content of the clipboard, using the SWS-function reaper.CF_GetClipboardBig, but manages the stuff
			necessary, that surrounds using this function
	- SecondsToTimeString_hh_mm_ss_mss - converts seconds into a timestring of the format hh:mm:ss.mss
	- TimeStringToSeconds_hh_mm_ss_mss - converts a timestring of the format hh:mm:ss.mss into seconds
	- ParseMarkerString - converts a string with markernames or a string with timestrings and markernames into an array
	- RenumerateMarkers - renumbers the shown-marker-ids in the project, beginning with the first one to the last one. Good for
								"ordering" markers, that were included in unordered way.
	- ReadFullFile - reads a file and returns it's contents
	- StartTime - a new api-variable that contains the starting time of the current instance of the api, which probably means, your script, that
		embeds the framework
	
Changes from 4.00beta2.5 to 4.00beta2.6
	- corrections in the documentation
	- GetClosestNextMarker - couldn't find last marker and showed a time, even if no marker was found -> fixed now; 
			markers that are at time_position are now seen as a previous marker
	- GetClosestPreviousMarker - couldn't find first marker and showed a time, even if no marker was found -> fixed now; 
			markers that are at time_position are now seen as a next marker
	- GetClosestPreviousRegion - fixed possible bug preventing from finding the first region -> fixed now
	- GetClosestNextRegion - fixed possible bug preventing from finding the last region -> fixed now
	- GetClosestGoToPoints - new boolean parameters check_itemedge, check_marker, check_region to set, for which type of elements to look for;
			returns now also an item-number; instead of "Item", it uses "Itembeg" for the beginning and "Itemend" for the end of an item now as
			elementtype for items; added the itemtypes to the docs
	- GetNextClosestItemEdge - new return values: closest_item, item_number, edgetype, found_item	
	- GetPreviousClosestItemEdge - new return values: closest_item, item_number, edgetype, found_item	
	- WriteValueToFile - new parameter for optional appending a value to a file, other minor corrections
	- SetTrackRecState - missing parameter description for tracknumber in the docs -> fixed now
	- GetMediaItemsFromClipboard - produced an error, that made this function unusable -> fixed now
	- RippleInsert - didn't move an item close to "position" sometimes, before inserting -> fixed now
	- RippleInsert_MediaItemStateChunks - didn't move an item close to "position" sometimes, before inserting -> fixed now
	- GetPreviousMuteState used to use 0 for track 1, 1 for track 2. Changed to 1 for track 1, 2 for track 2, etc
	- GetNextMuteState used to use 0 for track 1, 1 for track 2. Changed to 1 for track 1, 2 for track 2, etc
	- CountMuteEnvelopePoints used to use 0 for track 1, 1 for track 2. Changed to 1 for track 1, 2 for track 2, etc
				could also produce an error when using an invalid track. -> Fixed now.
	- ToggleMute - could produce an error, when using an invalid track. -> Fixed now.
	- GetTrackAutoRecArmState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackAutomodeState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackBeatState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackBusCompState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackBypFXState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackFreeModeState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackGroupFlagsState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackHeightState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackINQState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackIPhaseState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackIcon_Filename - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackIsBusState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackLayoutNames - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackLockState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackMIDIOutState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackMainSendState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackMidiCTL - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackMidiInputChanMap - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackMuteSoloState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackNChansState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackName - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackPeakColorState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackPerfState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackRecState - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackShowInMixState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- GetTrackVUState   - tracknumbers start now with 1 for track 1; produced an error when using nil as tracknumber -> fixed
	- SetTrackAutoRecArmState  	 - tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackAutomodeState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackBeatState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackBusCompState  - tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackBypFXState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackFreeModeState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackHeightState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackINQState  - tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackIPhaseState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackIcon_Filename  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackIsBusState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackLayoutNames  - tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackLockState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackMIDIOutState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackMainSendState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackMidiCTL  - tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackMidiInputChanMap  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackMuteSoloState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackNChansState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackName  - tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackPeakColorState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackPerfState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackRecState  	- tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackShowInMixState  - tracknumbers start now with 1 for track 1, instead of 0
	- SetTrackVUState  - tracknumbers start now with 1 for track 1, instead of 0
   

>> 4.00 Beta 2.5: - "Musique non stop - Technopop - Kraftwerk" - 10th of September 2017
New features in 4.00beta2.5
	- Import Markers/Regions from RPP-Projectfiles
	- Selection/Deselection of items, as well as getting functions for getting selected items
	- functions for checking MediaItemArray and MediaItemStateChunkArrays for validity
	- Trackstatechunks: getting/adding/setting/deleting/counting items in/to trackstate-chunks
	- Routing-Send/Receive - functions for count, add, get, set, delete
	- HWOut-settings - functions for count, add, get, set, delete
	- Lock Track Controls - get, set functions
	- Track Selection functions - get, set
	- Functions to lock-MediaItems easily
	- added RippleInsert for mediaitemstatechunkarrays
	- get MediaItems from clipboard
	- many functions for getting MediaItem-states from MediaItemStateChunks
	- some functions for setting MediaItem-states into MediaItemStateChunks
	- more MediaItem-insertion functions for MediaItemStateChunks
	- choosing MediaItems from specific tracks from MediaItemArray
	- new trackstring-analysis and manipulation-functions
	- functions for getting Mediaitems from specific tracks
	- apply statechunk to MediaItems, for extended manipulation of MediaItems using manipulated MediaItemStateChunks
	- Reaper-Main-Window: get left and right sides in relation to the screen position
	- client2screen2client x-coordinate conversion functions
	- developer: new Errormessaging system, that will, in the future, give readable error-messages, 
			when errors occur during execution of functions. Currently only some functions return error messages; will change over time.
	- tons of other helper-functions in many areas
 
Changes from 4.00beta2.1 to 4.00beta2.5
	- minor corrections in documentation
	- RenderProjectToAIFF - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
	- RenderProjectToFLAC - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
	- RenderProjectToMP3_ABR - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
	- RenderProjectToMP3_CBR - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
	- RenderProjectToMP3_MaxQuality - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
	- RenderProjectToMP3_VBR - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
	- RenderProjectToOPUS - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
	- RenderProjectToWebMVideo - new parameters for start and endposition of the renderrange. Nil as projectfilename renders the currently opened project.
	- GetProject_HorizontalZoom was incorrectly named GetProject_Zoom in the docs -> fixed
	- GetApiVersion was incorrectly linked to GetPath in the docs -> fixed
	- GetAllMediaItemsBetween - adds "ULTRASCHALL_TRACKNUMBER tracknumber" to returned statechunks, to know, from which track the item originated from
	- SplitMediaItems_Position - bug introduced in beta 2.1 that split only first track -> fixed
	- RippleInsert - bug introduced in beta 2.1 -> fixed
	- InsertMediaItemArray - bug introduced in beta 2.1 -> fixed
	- GetMediaItemsAtPosition - bug introduced in beta 2.1 -> fixed
	- OnlyMediaItemsOfTracksInTrackstring - bug introduced in beta 2.1 -> fixed
	- DeleteMediaItems_Position - bug introduced in beta 2.1 -> fixed
	- GetAllMediaItemsBetween - bug introduced in beta 2.1 -> fixed
	- MoveMediaItemsAfter_By - bug introduced in beta 2.1 -> fixed
	- MoveMediaItemsBefore_By - bug introduced in beta 2.1 -> fixed
	- MoveMediaItemsSectionTo - bug introduced in beta 2.1 -> fixed
	- SectionCut - bug introduced in beta 2.1 -> fixed
	- SectionCut_Inverse - bug introduced in beta 2.1 -> fixed
	- RippleCut - bug introduced in beta 2.1 -> fixed
	- RippleCut_Reverse - bug introduced in beta 2.1 -> fixed
	- RemoveDuplicateTracksInTrackstring - entries in trackstringarray are now numbers, not strings
	- SetTrackAutoRecArmState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackAutomodeState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackBeatState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackBusCompState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackBypFXState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackFreeModeState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackHeightState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackINQState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackIPhaseState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackIcon_Filename - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackIsBusState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackLayoutNames - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackLockState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackMIDIOutState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackMainSendState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackMidiCTL - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackMidiInputChanMap - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackMuteSoloState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackNChansState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackName - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackPeakColorState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackPerfState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackRecState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackShowInMixState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- SetTrackVUState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackAutoRecArmState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackAutomodeState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackBeatState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackBusCompState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackBypFXState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackFreeModeState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackGroupFlagsState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackHeightState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackINQState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackIPhaseState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackIcon_Filename - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackIsBusState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackLayoutNames - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackLockState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackMIDIOutState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackMainSendState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackMidiCTL - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackMidiInputChanMap - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackMuteSoloState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackNChansState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackName - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackPeakColorState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackPerfState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackRecState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackShowInMixState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetTrackVUState - had a bug when using tracknumbers higher than the highest available tracknumber -> fixed
	- GetMediaItemsAtPosition - returns now an array with the MediaItemStateChunks as well
	- RemoveDuplicateTracksInTrackstring - produced Lua-error, when giving nil as parameter -> fixed
   
   
>> 4.00 Beta2.1: - "Ich und der Rock - Renft" - 30th of August
New features in 4.00beta2.1
	- mostly bugfixes
	- ultraschall.Separator - contains the proper separator for the system it runs on. If you want to do file-operation, 
								you should use this instead of \\ or /, to make your script Mac and Windows compliant.
	- ultraschall.Script_Path - contains the path to the scripts-folder of Reaper
	
Changes from 4.00beta2 to 4.00beta2.1 
	- changed the lines, you need to include into your script. refer "3. How to use the API in your LUA-Script" in the doc-file.
	- some functions didn't work on Mac, due it's use of / instead of \ as directory-separator. Has been fixed now.
	- moved all ultraschall-related variables into the ultraschall-table.
	- GetPartialString - returns nil in case of error
	- CSV2Line - returns nil in case of error, bugfixing
	- RGB2Num - returns nil in case or error
	- CSV2IndividualLinesAsArray - returns nil in case or error, bugfixing
	- GetNextMuteState - corrected documentation
	- GetNextMuteState_TrackObject - corrected documentation
	- GetPreviousMuteState - corrected documentation
	- GetPreviousMuteState_TrackObject - corrected documentation
	- ImportChaptersFromFile - corrected documentation
	- ImportEditFromFile - corrected documentation
	- ImportMarkersFromFile - corrected documentation
	- ImportChaptersFromFile_Filerequester - corrected documentation
	- ImportEditFromFile_Filerequester - corrected documentation
	- ImportMarkersFromFile_Filerequester - corrected documentation
	- RemoveDuplicateTracksInTrackstring - improved return values
	- OnlyMediaItemsOfTracksInTrackstring - improved return values
	- ChangeDeltaOffsetOfMediaItems_FromArray - bugfixing
	- InsertMediaItem_MediaItem - improved return values
	- InsertMediaItem_MediaItemStateChunk - improved return values
 
   
>> 4.00 Beta2: - "Shock The Monkey - Peter Gabriel" - 20th August 2017
New Features in 4.00beta2 - about 190 new functions with:
	- Configuration: Import/Export from/to reaper-kb.ini-files
	- Configuration: New Management-functions for Configuration-files that follow standard ini-files
	- Clipboard: Clipboard Functions, get and put (thanks to fernsehmuell for the mac-side)
	- Envelopes: Move Envelope-Points in a track
	- File-Management: extended fileread-functions, including reading lines that follow patterns, and more
	- Markers: Move Markers, as well as Edit Markers
	- Markers: Get Markers/Regions/Time-Signature-marker by their graphical representation, means: you can use e.g. the mouse to find markers
				the mouse is hovering above
	- Items: Get, Split, Insert, Delete, Shorten, Cut, RippleCut, RippleInsert, etc of single and multiple MediaItems in 1 or more tracks
	- Projectfiles: Get and set 40 settings in rpp-projectfiles. More to come.
	- Projectfiles: Import Tracks with Items and all FX and settings from project-files using GetProject_TrackStateChunk. 
					You can insert them with the new item function InsertMediaItem_MediaItemStateChunk
	- Rendering: Render projectfiles as mp3, mp3_vbr, mp3_cbr, mp3_abr, opus, flac, aiff, and webm(video). That's right: no render dialog necessary!
	- Docs: The Documentation-System, that automatically creates the API-Docs from the API itself, using CreateUSApiDocs_HTML. 
			Will be extended to be a fully equipped automatic-documentation-system for Ultraschall
	- Tons of other functions in all areas.
          
Changes from 4.00beta1 to 4.00beta2
	- Marker/Regions-functions - they used to ignore regions which led to wrong markers/regions -> fixed
	- ultraschall.WriteValueToFile - default write-mode changed to binary-file behavior(doesn't add useless newlines anymore)
										non binary-mode can be chosen by a new parameter "binarymode" set to false, if it's   
										set to nil or true, value will be treated as binaryvalue and saved as such.
										ultraschall.WriteValueToFile(Filename_with_path, Value, binarymode)
	- CSV2IndividualLines - renamed to CSV2IndividualLinesAsArray and added number of lines as additional return-value
	- NumberRangeAsCsvOfNumbers - renamed to CreateTrackNumbersString
	- Structure - reworked API-structure
 
 
>> 4.00 beta1: - "Tomorrow Never Knows - The Beatles" - 10th of July 2017
New Features in 4.00beta1 - about 140 new functions with:
	- Markers: extensive marker-management, with markers for chapter, edit, dummy, normal and podrange-regions
	- Configuration: functions for an Ultraschall.ini. Ultraschall needs it's own config-file, at last ;)
	- CoughButtons: CoughButton-management for setting, toggling, getting envelope-points in the mute-envelope-lane
	- Navigation: Jumping to position, setting playcursor, toggling scrolling during playback, finding next item/marker/region and more
	- Track-Management: Getting and Setting tons of track-states, that are usually hard to fumble out of Reaper.
	- File-Management: Write a value to a file.
	- Dozens of helper-functions here and there
